{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\artur\\\\WebstormProjects\\\\electronic_textbook\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\n/*import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Lecture from './components/Lecture';\r\nimport Quiz from './components/Quiz';\r\nimport Practice from './components/Practice';\r\nimport Dictionary from './components/Dictionary'; // Импортируйте компонент словаря\r\nimport lecturesContent from './chapters/LecturesContent';\r\nimport quizzesContent from './chapters/quizzesContent'; // Импорт контента тестов\r\nimport practiceContent from './chapters/practiceContent'; // Импорт контента практики\r\n\r\nconst App = () => {\r\n    const [language, setLanguage] = useState('ru');\r\n\r\n    const handleLanguageChange = (newLanguage) => {\r\n        setLanguage(newLanguage);\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <Header onLanguageChange={handleLanguageChange} />\r\n            <Routes>\r\n                <Route path=\"/\" element={<h2>Добро пожаловать в электронный учебник!</h2>} />\r\n                <Route path=\"/lectures\" element={<Lecture content={lecturesContent} language={language} />} />\r\n                <Route path=\"/quizzes\" element={<Quiz content={quizzesContent} />} />\r\n                <Route path=\"/practices\" element={<Practice content={practiceContent} />} />\r\n                <Route path=\"/dictionary\" element={<Dictionary language={language} />} />\r\n            </Routes>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;*/\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Header from './components/Header';\nimport Lecture from './components/Lecture';\nimport Quiz from './components/Quiz';\nimport Practice from './components/Practice';\nimport Dictionary from './components/Dictionary';\nimport lecturesContent from './chapters/LecturesContent';\nimport quizzesContent from './chapters/quizzesContent';\nimport practiceContent from './chapters/practiceContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [language, setLanguage] = useState('ru');\n  const handleLanguageChange = newLanguage => {\n    setLanguage(newLanguage);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onLanguageChange: handleLanguageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: language === 'ru' ? 'Добро пожаловать в электронный учебник!' : 'Welcome to the electronic textbook!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/lectures\",\n        element: /*#__PURE__*/_jsxDEV(Lecture, {\n          content: lecturesContent,\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quizzes\",\n        element: /*#__PURE__*/_jsxDEV(Quiz, {\n          content: quizzesContent,\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/practices\",\n        element: /*#__PURE__*/_jsxDEV(Practice, {\n          content: practiceContent,\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dictionary\",\n        element: /*#__PURE__*/_jsxDEV(Dictionary, {\n          language: language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"G9nNCl/uT2f9E1p1RJGdbk0K1NE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Header","Lecture","Quiz","Practice","Dictionary","lecturesContent","quizzesContent","practiceContent","jsxDEV","_jsxDEV","App","_s","language","setLanguage","handleLanguageChange","newLanguage","children","onLanguageChange","fileName","_jsxFileName","lineNumber","columnNumber","path","element","content","_c","$RefreshReg$"],"sources":["C:/Users/artur/WebstormProjects/electronic_textbook/src/App.jsx"],"sourcesContent":["/*import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Lecture from './components/Lecture';\r\nimport Quiz from './components/Quiz';\r\nimport Practice from './components/Practice';\r\nimport Dictionary from './components/Dictionary'; // Импортируйте компонент словаря\r\nimport lecturesContent from './chapters/LecturesContent';\r\nimport quizzesContent from './chapters/quizzesContent'; // Импорт контента тестов\r\nimport practiceContent from './chapters/practiceContent'; // Импорт контента практики\r\n\r\nconst App = () => {\r\n    const [language, setLanguage] = useState('ru');\r\n\r\n    const handleLanguageChange = (newLanguage) => {\r\n        setLanguage(newLanguage);\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <Header onLanguageChange={handleLanguageChange} />\r\n            <Routes>\r\n                <Route path=\"/\" element={<h2>Добро пожаловать в электронный учебник!</h2>} />\r\n                <Route path=\"/lectures\" element={<Lecture content={lecturesContent} language={language} />} />\r\n                <Route path=\"/quizzes\" element={<Quiz content={quizzesContent} />} />\r\n                <Route path=\"/practices\" element={<Practice content={practiceContent} />} />\r\n                <Route path=\"/dictionary\" element={<Dictionary language={language} />} />\r\n            </Routes>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;*/\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Header from './components/Header';\r\nimport Lecture from './components/Lecture';\r\nimport Quiz from './components/Quiz';\r\nimport Practice from './components/Practice';\r\nimport Dictionary from './components/Dictionary';\r\nimport lecturesContent from './chapters/LecturesContent';\r\nimport quizzesContent from './chapters/quizzesContent';\r\nimport practiceContent from './chapters/practiceContent';\r\n\r\nconst App = () => {\r\n    const [language, setLanguage] = useState('ru');\r\n\r\n    const handleLanguageChange = (newLanguage) => {\r\n        setLanguage(newLanguage);\r\n    };\r\n\r\n    return (\r\n        <Router>\r\n            <Header onLanguageChange={handleLanguageChange} />\r\n            <Routes>\r\n                <Route path=\"/\" element={<h2>{language === 'ru' ? 'Добро пожаловать в электронный учебник!' : 'Welcome to the electronic textbook!'}</h2>} />\r\n                <Route path=\"/lectures\" element={<Lecture content={lecturesContent} language={language} />} />\r\n                <Route path=\"/quizzes\" element={<Quiz content={quizzesContent} language={language} />} />\r\n                <Route path=\"/practices\" element={<Practice content={practiceContent} language={language} />} />\r\n                <Route path=\"/dictionary\" element={<Dictionary language={language} />} />\r\n            </Routes>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}